{% extends "CleentfaarSudokuBundle::layout.html.twig" %}
{% block stylesheets %}
    {{ parent() }}
    {% stylesheets './bundles/happyrselect2/css/select2.css' filter='cssrewrite' %}
    <link rel="stylesheet" href="{{ asset_url }}" />
    {% endstylesheets %}
{% endblock %}
{% block content %}
    <div id="SudokuContainer">
        <div class="row" id="content-wrapper">
            <div class="col-xs-12" id="SudokuGrid"></div>
        </div>
    </div>
{% endblock %}
{% block javascripts %}
    {{ parent() }}
    {% javascripts
    '@HappyRSelect2Bundle/Resources/public/js/select2.min.js'
    '@HappyRSelect2Bundle/Resources/public/js/select2_locale_nl.js'
    '@CleentfaarSudokuBundle/Resources/public/js/sudoku.js'
    %}
    <script type="text/javascript" src="{{ asset_url }}"></script>
    {% endjavascripts %}
    <script type="text/javascript">
        $(function() {
            $("#SudokuGrid").sudoku({
                setup: {
                    {% for cellKey,cellValue in grid %}
                        '{{ cellKey }}': '{{ cellValue }}'{% if loop.last is not sameas(true) %},{% endif %}
                    {% endfor %}
                },
                debug: true,
                autoSolvedClass: "solved",
                manualSolvedClass: "solved",
                actions: ["solve", "generate", "zoom", "hint"],
                startingClues: 17,
                onCreateActionUrl: function(action) {
                    switch (action) {
                        case 'generate':
                            return '{{ path('cleentfaar_sudoku_generate') }}' + $('#');
                            break;
                        default:
                            return '#';
                            break;
                    }
                },
                onCellSolve: function($cell) {
                    return alert("solved!");
                },
                onCellConflicts: function(conflictingCells) {
                    return alert("there are conflicts with the following cells: "+conflictingCells.join(','));
                }
            });
            $("select").select2({
                placeholder: '-'
            });
        });
    </script>
{% endblock %}